from telegram import Update, KeyboardButton, ReplyKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes
from dependency_injector.wiring import inject, Provide

from loguru import logger

from src.container import Container
from src.dto.user import User
from src.storage.cache import Cache


@inject
async def start_handler(
    update: Update,
    context: ContextTypes.DEFAULT_TYPE,
    cache: Cache = Provide[Container.cache],
    default_admins: list[int] = Provide[Container.config.provided.default_admins]
) -> None:
    """
    Start message for users
    :param default_admins:
    :param cache:
    :param update:
    :param context:
    :return:
    """
    user = User(
        tg_id=update.effective_user.id,
        name=update.effective_user.name,
        admin=update.effective_user.id in default_admins
    )
    u = await cache.get_user_by(user.tg_id, user.name, first=True)
    if u:
        msg = '–í—ã —É–∂–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –Ω–∞—à—É —Ä–∞—Å—Å—ã–ª–∫—É, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –º—ã –±—É–¥–µ–º –≥–æ—Ç–æ–≤—ã ' \
              '–º—ã –≤–∞–º –Ω–∞–ø–∏—à–µ–º!'
        footer = '\n\n–° –ª—é–±–æ–≤—å—é @trip_for_students üß°'
        if not u.phone:
            msg += '\n–ù–æ —É –Ω–∞—Å –≤—Å—ë –µ—â—ë –Ω–µ—Ç –≤–∞—à–µ–≥–æ —Ç–µ–ª–µ—Ñ–æ–Ω–∞,\n' \
                   '–Ω–∞–º –±—É–¥–µ—Ç –∑–∞—Ç—Ä—É–¥–Ω–∏—Ç–µ–ª—å–Ω–æ –Ω–∞–π—Ç–∏ –≤–∞—Å –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ –≤–æ–≤—Ä–µ–º—è,\n' \
                   '–ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–¥–µ–ª–∏—Ç–µ—Å—å —Å –Ω–∞–º–∏ —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º!:3\n\n–î–ª—è —ç—Ç–æ–≥–æ –Ω–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É!'
        await context.bot.send_message(
            chat_id=update.effective_chat.id,
            text=str(msg + footer),
            reply_markup=ReplyKeyboardMarkup(
                keyboard=[
                    [
                        KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º', request_contact=True),
                    ],
                ],
                resize_keyboard=True,
                one_time_keyboard=True,
            ) if not u.phone else None
        )
        return

    _ = await cache.save_user(user)
    logger.info('Save new user: {}'.format(user))

    await context.bot.send_message(
        chat_id=update.effective_chat.id,
        text='–°–ø–∞—Å–∏–±–æ —á—Ç–æ –ø–æ–¥–ø–∏—Å–∞–ª–∏—Å—å –Ω–∞ –Ω–∞—Å!\n'
             '–ü—Ä–µ–¥–æ—Å—Ç–∞–≤—å—Ç–µ —Ç–∞–∫ –∂–µ –Ω–∞–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–µ–º –Ω–æ–º–µ—Ä–µ —Ç–µ–ª–µ—Ñ–æ–Ω–∞, '
             '—á—Ç–æ –±—ã –º—ã –º–æ–≥–ª–∏ –Ω–∞–π—Ç–∏ –≤–∞—Å –≤ –Ω–∞—à–∏—Ö —Å–ø–∏—Å–∫–∞—Ö:3\n\n'
             '–° –ª—é–±–æ–≤—å—é @trip_for_students üß°',
        reply_markup=ReplyKeyboardMarkup(
            keyboard=[
                [
                    KeyboardButton('–ü–æ–¥–µ–ª–∏—Ç—Å—è —Ç–µ–ª–µ—Ñ–æ–Ω–æ–º', request_contact=True),
                ]
            ],
            resize_keyboard=True,
            one_time_keyboard=True,
        )
    )
