from telegram import CallbackQuery, InlineKeyboardMarkup, InlineKeyboardButton
from telegram.ext import ContextTypes

from loguru import logger

from src.bot.admin.utils import get_file, merge_users
from src.dto.user_data import UserData
from src.errors import BadColumnName
from src.storage.cache import Cache
from src.storage.enums import CallbackKeys


async def verify_xlsx(
    context: ContextTypes.DEFAULT_TYPE,
    callback_query: CallbackQuery,
    cache: Cache
) -> None:
    try:
        ud = UserData(**context.user_data)
    except ValueError as ex:
        logger.error(ex)
        await context.bot.edit_message_text(
            chat_id=callback_query.message.chat_id,
            message_id=callback_query.message.message_id,
            text='–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–∞—á–∞–ª–∞ üôàüôàüôà'
        )
        return

    try:
        users, bad_data = get_file(ud)
    except BadColumnName as ex:
        await context.bot.edit_message_text(
            chat_id=callback_query.message.chat_id,
            message_id=callback_query.message.message_id,
            text='–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ xlsx, —Ñ–∞–π–ª–∞ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞,\n'
                 '–≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤–∞–º–∏ –ø–æ–ª–µ {} –Ω–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç –≤ xlsx —Ñ–∞–π–ª–µ.\n'
                 '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞, —á—É—Ç—å –ø–æ–∑–∂–µ, —è –ø–æ–∫–∞ —Å–æ–æ–±—â—É –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.'.format(ex.column)
        )
        return
    keyboard = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton("–î–∞", callback_data=CallbackKeys.sending),
                InlineKeyboardButton("–ù–µ—Ç", callback_data=CallbackKeys.cancel)
            ]
        ],
    )
    if bad_data:
        await context.bot.edit_message_text(
            chat_id=callback_query.message.chat_id,
            message_id=callback_query.message.message_id,
            text='–ü—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ xlsx —Ñ–∞–π–ª–∞, '
                 '–ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–∞–ª–∏–¥–∞—Ü–∏–∏ —ç—Ç–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π:\n{}\n'
                 '–í—Å—ë –µ—â—ë —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? ({}/{})'
                 ''.format('\n'.join(bad_data), len(users), len(bad_data)),
            reply_markup=keyboard
        )
        return

    db_users = await cache.get_all_users()
    merged = merge_users(db_users, users)
    if len(users) == 0:
        pass
    if len(users) != len(merged):
        await context.bot.edit_message_text(
            chat_id=callback_query.message.chat_id,
            message_id=callback_query.message.message_id,
            # tg_id -> 1, only for users from xlsx
            text='–ù–µ–∫–æ—Ç–æ—Ä—ã–µ –∏–∑ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –º–µ–Ω—è:\n{0}\n'
                 '–í—ã —Ö–æ—Ç–∏—Ç–µ —Å–¥–µ–ª–∞—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É –Ω–∞ –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π? ({1}/{2})'.format(
                '\n'.join([str(u) for u in users if u.tg_id == 1]),
                len(merged),
                len(users)
            ),
            reply_markup=keyboard
        )
        return
    await context.bot.edit_message_text(
        chat_id=callback_query.message.chat_id,
        message_id=callback_query.message.message_id,
        text='–í—Å–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –≤ —Ñ–∞–π–ª–µ –ø–æ–¥–ø–∏—Å–∞–Ω—ã –Ω–∞ –º–µ–Ω—è üß°\n'
             '–ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É?',
        reply_markup=keyboard
    )
